//| mvnDeps:
//| - io.github.nafg.millbundler::millbundler::0.3.0-6-1c8349-DIRTY-SNAPSHOT
//| - com.github.lolgab::mill-scalablytyped::0.4.0
// plugins declaration in yaml format

package build

import mill._
import mill.api.BuildCtx
import mill.scalajslib.api._
import scalalib._
import scalajslib._
import com.github.lolgab.mill.scalablytyped._
import io.github.nafg.millbundler._


object Versions {
  val laminar = "17.2.1"
  val scala = "3.7.3"
  val scalajs = "1.20.1"
  val scalajsdom = "2.8.1"
}

trait Base extends ScalaJSModule {
  def scalaVersion = Versions.scala
  def scalaJSVersion = Versions.scalajs
}


object `package` extends Module {
  object `scalablytyped-module` extends Base with ScalablyTyped

  object frontend extends ScalaJSRollupModule with Base {

    def mvnDeps = Seq(
      mvn"com.raquo::laminar::${Versions.laminar}",
      mvn"org.scala-js::scalajs-dom::${Versions.scalajsdom}",

    )
    def moduleKind = ModuleKind.ESModule
    def moduleDeps = Seq(`scalablytyped-module`)

    def scalacOptions: T[Seq[String]] = Seq(
      "-deprecation",
      "-Xfatal-warnings",
      "-Wvalue-discard",
      "-Wsafe-init",
      "-Wnonunit-statement",
      "-Wconf:msg=(unused.*value|discarded.*value|pure.*statement):error",
      "-Yexplicit-nulls",
      "-language:strictEquality"
    )

    // custom bundling step to /dist/ - suboptimal
    def devBundleTauri = Task {
      // bypass sandboxing for now
      BuildCtx.withFilesystemCheckerDisabled {
        val bundles = devBundle()
        val jsPath = bundles.head.path / os.up
        val targetPath = jsPath / os.up / os.up / os.up / "dist"
        val target = targetPath / "main.js"
        os.copy.over(BuildCtx.watch(jsPath / "out-bundle.js"), target, createFolders = true)
        val sourceMap = jsPath / "out-bundle.js.map"
        if (os.exists(sourceMap)) {
          os.copy.over(BuildCtx.watch(sourceMap), targetPath / "main.js.map")
        }
        PathRef(target)
      }
    }
  }
}
